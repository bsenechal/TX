<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/TX" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory"     class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	        <property name="dataSource" ref="dataSource" />
	        <property name="configLocation">
	            <value>classpath:/config/hibernate.cfg.xml</value>
	        </property>
	        <property name="hibernateProperties">
	            <props>
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	                <prop key="hibernate.show_sql">true</prop>
	            </props>
	        </property>
	</bean>
	
	<bean id="userDao" class="com.utc.tx.dao.GenericDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<constructor-arg>
        	<value>com.utc.tx.model.User</value>
    	</constructor-arg>
	</bean>
	
	<bean id="userService" class="com.utc.tx.service.GenericServiceImpl">
		<property name="dao" ref="userDao"></property>
		<constructor-arg>
        	<value>com.utc.tx.model.User</value>
    	</constructor-arg>
	</bean>
	
	<bean id="roleDao" class="com.utc.tx.dao.GenericDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<constructor-arg>
        	<value>com.utc.tx.model.Role</value>
    	</constructor-arg>
	</bean>
	
	<bean id="roleService" class="com.utc.tx.service.GenericServiceImpl">
		<property name="dao" ref="roleDao"></property>
		<constructor-arg>
        	<value>com.utc.tx.model.Role</value>
    	</constructor-arg>
	</bean>
    
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven proxy-target-class="true" />

	<aop:config>
		<aop:pointcut id="userServicePointCut"
			expression="execution(* com.utc.tx.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
	</aop:config>

</beans>